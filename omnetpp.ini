[General]
rng-class="cMersenneTwister"

#seed-set = ${0..4 step 1}
#seed-set = 12345

#output-scalar-file = "results/${configname}-${datetimef}-${seedset}-#${runnumber}.sca"
#cmdenv-output-file = "results/${configname}-${datetimef}-${seedset}-#${runnumber}.out"

output-scalar-file = "results/${configname}-${datetimef}-#${iterationvarsf}.sca"
cmdenv-output-file = "results/${configname}-${datetimef}-#${iterationvarsf}.out"

#1 - Adaptive cyclic polling system with exhaustive service and 2 queues
[Config AdaptiveCyclicExhaustivePollingSystemWith2QueuesAndMonitor]
description = "Adaptive Cyclic Exhaustive Polling System With 2 Queues And Monitor"
network = AdaptiveCyclicExhaustivePollingSystemWith2QueuesAndMonitor
*.numQueues = 2
*.generator[0].interarrivalTime = exponential(1/30)
*.generator[1].interarrivalTime = exponential(1/20)
*.adaptiveCyclicExhaustiveQueue[*].serviceTime = exponential(0.01)
*.adaptiveCyclicServer.switchoverTime = "0.001 0.001"
*.adaptiveCyclicServer.vacationTime = exponential(0.002)
#*.generator[*].interarrivalTime = exponential(1/${5..40 step 5})


#2 - Adaptive cyclic polling system with gated service and 2 queues
[Config AdaptiveCylicGatedPollingSystemWith2QueuesAndMonitor]
description = "Adaptive Cyclic Gated Polling System With 2 Queues And Monitor"
network = AdaptiveCyclicGatedPollingSystemWith2QueuesAndMonitor
*.numQueues = 2
*.generator[0].interarrivalTime = exponential(1/0.321)
*.generator[1].interarrivalTime = exponential(1/0.321)
*.adaptiveCyclicGatedQueue[*].serviceTime = exponential(0.311)
*.adaptiveCyclicServer.switchoverTime = "0.091 0.091"
*.adaptiveCyclicServer.vacationTime = exponential(0.005)

#3 - Cylic polling systems with exhaustive batch service
[Config CyclicExhaustiveBatchPollingSystem]
description = "Cyclic Exhaustive Batch Polling System"
network = CyclicExhaustiveBatchPollingSystem
*.numQueues = 2
*.generator[*].interarrivalTime = exponential(1/${10..45 step 5})
#*.generator[*].interarrivalTime = exponential(1/40)
*.cyclicExhaustiveBatchQueue[*].queueCapacity = inf
*.cyclicExhaustiveBatchQueue[*].serviceTime = exponential(1/100)
*.cyclicExhaustiveBatchQueue[*].batchSize = 3
*.cyclicServer.switchoverTime = "0.001 0.001"

#4 - Cylic polling systems with gated batch service
[Config CyclicGatedBatchPollingSystem]
description = "Cyclic Gated Batch Polling System"
network = CyclicGatedBatchPollingSystem
*.numQueues = 2
#*.generator[*].interarrivalTime = exponential(1/${5..40 step 5})
*.generator[*].interarrivalTime = exponential(1/40)
*.cyclicGatedBatchQueue[*].queueCapacity = inf
*.cyclicGatedBatchQueue[*].serviceTime = exponential(1/100)
*.cyclicGatedBatchQueue[*].batchSize = 1
*.cyclicServer.switchoverTime = "0.001 0.001"

