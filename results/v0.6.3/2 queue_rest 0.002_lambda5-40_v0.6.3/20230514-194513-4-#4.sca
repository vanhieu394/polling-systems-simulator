version 3
run DynamicExhaustivePollingSystemWithTwoQueues-4-20230514-19:45:13-10184
attr configname DynamicExhaustivePollingSystemWithTwoQueues
attr datetime 20230514-19:45:13
attr datetimef 20230514-194513
attr experiment DynamicExhaustivePollingSystemWithTwoQueues
attr inifile omnetpp.ini
attr iterationvars $0=25
attr iterationvarsd 25
attr iterationvarsf 25-
attr measurement $0=25
attr network DynamicExhaustivePollingSystem
attr processid 10184
attr repetition 0
attr replication #0
attr resultdir results
attr runnumber 4
attr seedset 4
config cmdenv-redirect-output true
config description "Dynamic Adaptive Exhaustive Polling System With 2 Queues"
config network DynamicExhaustivePollingSystem
config *.numQueues 2
config *.generator[*].interArrivalTime exponential(1/25)
config *.dynamicExhaustiveQueue[*].serviceTime exponential(0.01)
config *.dynamicServer.switchingTime "\"0.001 0.001\""
config *.dynamicServer.restTime exponential(0.002)
config rng-class cMersenneTwister
config output-scalar-file results/20230514-194513-4-#4.sca
config cmdenv-output-file results/20230514-194513-4-#4.out

par DynamicExhaustivePollingSystem.generator[0] typename "\"Generator\""
par DynamicExhaustivePollingSystem.generator[0] interArrivalTime exponential(0.04)
par DynamicExhaustivePollingSystem.generator[1] typename "\"Generator\""
par DynamicExhaustivePollingSystem.generator[1] interArrivalTime exponential(0.04)
par DynamicExhaustivePollingSystem.dynamicExhaustiveQueue[0] typename "\"DynamicExhaustiveQueue\""
par DynamicExhaustivePollingSystem.dynamicExhaustiveQueue[0] serviceTime exponential(0.01)
par DynamicExhaustivePollingSystem.dynamicExhaustiveQueue[0] ownIndex 0
scalar DynamicExhaustivePollingSystem.dynamicExhaustiveQueue[0] "Mean waiting time in DynamicExhaustiveQueue[0]" 0.012695186578573
scalar DynamicExhaustivePollingSystem.dynamicExhaustiveQueue[0] "Mean sojourn time in DynamicExhaustiveQueue[0]" 0.022699562022246
scalar DynamicExhaustivePollingSystem.dynamicExhaustiveQueue[0] "Mean cycle time in DynamicExhaustiveQueue[0]" 0.0052364157953189
scalar DynamicExhaustivePollingSystem.dynamicExhaustiveQueue[0] "Mean intervisit time in DynamicExhaustiveQueue[0]" 0.0039263731216448
scalar DynamicExhaustivePollingSystem.dynamicExhaustiveQueue[0] "Number of cycle in DynamicExhaustiveQueue[0]" 17930847
par DynamicExhaustivePollingSystem.dynamicExhaustiveQueue[1] typename "\"DynamicExhaustiveQueue\""
par DynamicExhaustivePollingSystem.dynamicExhaustiveQueue[1] serviceTime exponential(0.01)
par DynamicExhaustivePollingSystem.dynamicExhaustiveQueue[1] ownIndex 1
scalar DynamicExhaustivePollingSystem.dynamicExhaustiveQueue[1] "Mean waiting time in DynamicExhaustiveQueue[1]" 0.013024091431114
scalar DynamicExhaustivePollingSystem.dynamicExhaustiveQueue[1] "Mean sojourn time in DynamicExhaustiveQueue[1]" 0.023025815931739
scalar DynamicExhaustivePollingSystem.dynamicExhaustiveQueue[1] "Mean cycle time in DynamicExhaustiveQueue[1]" 0.005237504106198
scalar DynamicExhaustivePollingSystem.dynamicExhaustiveQueue[1] "Mean intervisit time in DynamicExhaustiveQueue[1]" 0.0039269444831611
scalar DynamicExhaustivePollingSystem.dynamicExhaustiveQueue[1] "Number of cycle in DynamicExhaustiveQueue[1]" 17927121
par DynamicExhaustivePollingSystem.dynamicServer typename "\"DynamicServer\""
par DynamicExhaustivePollingSystem.dynamicServer switchingTime "\"0.001 0.001\""
par DynamicExhaustivePollingSystem.dynamicServer restTime exponential(0.002)
par DynamicExhaustivePollingSystem.dynamicServer numQueues 2
scalar DynamicExhaustivePollingSystem.dynamicServer "Mean cycle time in the server" 0.002731125473062
scalar DynamicExhaustivePollingSystem.dynamicServer "Number of cycle" 34379003
par DynamicExhaustivePollingSystem.sink typename "\"Sink\""
scalar DynamicExhaustivePollingSystem.sink "Mean sojourn time" 0.022862725790498
scalar DynamicExhaustivePollingSystem.sink "Number of packets" 4697042
scalar DynamicExhaustivePollingSystem.sink "Working time" 87.968
par DynamicExhaustivePollingSystem.monitor typename "\"Monitor\""
par DynamicExhaustivePollingSystem.monitor numQueues 2
scalar DynamicExhaustivePollingSystem.monitor "Probability C1" 19.095049070661
scalar DynamicExhaustivePollingSystem.monitor "Probability C2" 19.079996229651
scalar DynamicExhaustivePollingSystem.monitor "Probability S1" 25.017924533517
scalar DynamicExhaustivePollingSystem.monitor "Probability S2" 25.022595996883
scalar DynamicExhaustivePollingSystem.monitor "Probability I" 11.784425720432
scalar DynamicExhaustivePollingSystem.monitor "Probability C1_1_1" 7.4567706868498
scalar DynamicExhaustivePollingSystem.monitor "Probability C1_1_0" 11.638278383812
scalar DynamicExhaustivePollingSystem.monitor "Probability C2_1_1" 12.446563698858
scalar DynamicExhaustivePollingSystem.monitor "Probability C2_0_1" 6.6334325307919
scalar DynamicExhaustivePollingSystem.monitor "Probability S1_1_1" 13.177529497216
scalar DynamicExhaustivePollingSystem.monitor "Probability S1_1_0" 11.840395036298
scalar DynamicExhaustivePollingSystem.monitor "Probability S2_1_1" 13.056623351026
scalar DynamicExhaustivePollingSystem.monitor "Probability S2_0_1" 11.965972645856
scalar DynamicExhaustivePollingSystem.monitor "Probability C1_0_1_0_0" 0
par DynamicExhaustivePollingSystem typename "\"DynamicExhaustivePollingSystem\""
par DynamicExhaustivePollingSystem numQueues 2

